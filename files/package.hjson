const NAME = rambda
const AUTHOR = selfrefactor
const DOCSIFY = docsify init ./docs
const BUILD = cross-env NODE_ENV=build rollup -c
const TOOLBELT = cd ../rambda-scripts&&yarn toolbelt
const NEW_METHOD = cd ../rambda-scripts&&yarn new
const RUN_BENCHMARKS = cd ../rambda-scripts&&yarn benchmarks
const GITHUB_RELEASE = cd ../rambda-scripts&&yarn github
const RUN_COMPLEX_BENCHMARKS = cd ../rambda-scripts&&yarn benchmarksx
const VERIFY_USED_BY = cd ../rambda-scripts&&yarn usedby
const IMMUTABLE_LINT = cd ../rambda-scripts&&yarn immutable
const DOCS = cd ../rambda-scripts&&yarn highlighter
const LINT = cd ../rambda-scripts&&yarn lint
const POPULATE_DOCS = cd ../rambda-scripts&&yarn populate:docs
const POPULATE_DOCS_X = cd ../rambda-scripts&&yarn populate:docs:rambdax
const POPULATE_README = cd ../rambda-scripts&&yarn populate:readme
const POPULATE_README_X = cd ../rambda-scripts&&yarn populate:readme:rambdax
const PARSE_HJSON = cd ../rambda-scripts&&yarn hjson:parse
const FIX_HJSON = cd ../rambda-scripts&&yarn hjson:fix
const VERSION = 6.5.3

{
  name: {{NAME}}
  version: {{VERSION}}
  scripts: {

    // It runs all scripts needed to prepare for `Rambda` release.
    out: {{POPULATE_DOCS}}&&{{POPULATE_README}}

    // It runs all scripts needed to prepare for `Rambdax` release.
    x: {{POPULATE_DOCS_X}}&&{{POPULATE_README_X}}

    // It generates Github release, after NPM version is published
    // It fails silently if such release is already made
    github: {{GITHUB_RELEASE}}

    // It creates JSON data used afterwards by the documentation site
    docs: {{DOCS}}

    // Update `ts-toolbelt` dependency
    toolbelt: {{TOOLBELT}}

    // It adds `readonly` to Typescript definitions
    immutable: {{IMMUTABLE_LINT}}

    // Runs a script to check if all repos listed in `Used by` section are actually using Rambda or Rambdax
    usedby: {{VERIFY_USED_BY}}

    // Lint all files including those in `scripts` folder
    lint: {{LINT}}

    // Build
    build: yarn build:main&&yarn build:web&&yarn deps
    "build:web": {{BUILD}} files/rollup.web.config.js
    "build:main": {{BUILD}} files/rollup.config.js
    
    // HJSON
    parse: {{PARSE_HJSON}}
    // Move updated dependencies to package.json
    deps: {{FIX_HJSON}}
    
    docsify: {{DOCSIFY}}
    new: {{NEW_METHOD}}
    test: jest source -u --bail=false
    
    "cover:spec": jest source --coverage --no-cache -w 1
    cover: yarn typings&&yarn cover:spec
    benchmark: {{RUN_BENCHMARKS}}

    // Complex benchmarks - still WIP
    benchmarkx: {{RUN_COMPLEX_BENCHMARKS}}
    
    typings: dtslint --localTs ./node_modules/typescript/lib --expectOnly ./source
    
    // Needed because of CI build error
    fix: mkdir $HOME/.dts/perf -p
  }

  dependencies: {}

  devDependencies: {
    @babel/core: 7.12.10
    @babel/plugin-proposal-object-rest-spread: 7.12.1
    @babel/preset-env: 7.12.11
    @rollup/plugin-babel: 5.2.2
    @rollup/plugin-commonjs: 17.0.0
    @rollup/plugin-json: 4.1.0
    @rollup/plugin-node-resolve: 11.1.0
    @rollup/plugin-replace: 2.3.4
    @types/jest: 26.0.20
    @types/ramda: 0.27.34
    combinate: 1.1.2
    cross-env: 7.0.3
    dtslint: 4.0.6
    helpers-fn: 1.3.2
    is-ci: 2.0.0
    jest: 26.6.3
    jest-extended: 0.11.5
    lodash: 4.17.20
    rambdax: 7.1.0
    ramda: 0.27.1
    rollup: 2.36.2
    rollup-plugin-cleanup: 3.2.1
    rollup-plugin-uglify: 6.0.4
    rollup-plugin-sourcemaps: 0.6.3
    typescript: 4.1.3
  }

  jest: {
    testEnvironment: node

    // Quotes are required as HJSON has its limits
    testRegex: ".*\\.spec\\.js$"
    setupFilesAfterEnv: [
      jest-extended
    ],
    collectCoverageFrom: [
      source/*.js
      !_internals
      !benchmarks
    ]
  }


  // Which files/folders are exposed as npm package
  files: [
    dist
    src
    _ts-toolbelt
    CHANGELOG.md
    index.d.ts
  ]

  repository: {
    type: git
    url: git+https://github.com/{{AUTHOR}}/{{NAME}}.git
  }
  
  license: MIT
  author: self_refactor
  description: Lightweight and faster alternative to Ramda
  module: ./dist/rambda.esm.js
  main: ./dist/rambda
  umd: ./dist/rambda.umd.js
  sideEffects: false

  keywords: [
    ramda
    fp
    functional
    utility
    lodash
  ]

  bugs: {
    url: https://github.com/{{AUTHOR}}/{{NAME}}/issues
  }

  homepage: https://github.com/{{AUTHOR}}/{{NAME}}#readme
}
